<controls:DopamineWindow x:Class="Dopamine.Views.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:prism="http://www.codeplex.com/prism"
        xmlns:prismMvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
        xmlns:commonprism="clr-namespace:Dopamine.Common.Prism;assembly=Dopamine.Common"
        xmlns:controls="clr-namespace:Dopamine.Common.Controls;assembly=Dopamine.Common"
        xmlns:base="clr-namespace:Dopamine.Common.Base;assembly=Dopamine.Common"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Title="{Binding TaskbarService.Description}" 
        Width="950" 
        Height="600" 
        MinWidth="{x:Static base:Constants.MinShellWidth}"
        MinHeight="{x:Static base:Constants.MinShellHeight}" 
        ContentRendered="Shell_ContentRendered"
        StateChanged="Shell_StateChanged"
        SizeChanged="Shell_SizeChanged"
        LocationChanged="Shell_LocationChanged"
        KeyDown="Shell_KeyDown"
        MouseDown="Shell_MouseDown"
        Closing="Shell_Closing"
        OverlayBackground="{DynamicResource RG_DimBackgroundBrush}"
        IsOverlayVisible="{Binding Path=IsOverlayVisible}"
        Background="Transparent"
        Foreground="{DynamicResource RG_WindowButtonForegroundBrush}"
        Accent="{DynamicResource RG_AccentBrush}"
        Closed="Shell_Closed"
        Deactivated="Shell_Deactivated"
        MouseUp="Shell_MouseUp"
        CloseToolTip="{DynamicResource Language_Close}"
        MinimizeToolTip="{DynamicResource Language_Minimize}"
        MaximizeToolTip="{DynamicResource Language_Maximize}"
        RestoreToolTip="{DynamicResource Language_Restore}"
        SourceInitialized="Shell_SourceInitialized"
        Loaded="Shell_Loaded"
        prismMvvm:ViewModelLocator.AutoWireViewModel="True">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!-- Resources -->
    <controls:DopamineWindow.Resources>
        <ResourceDictionary>
            <!-- Tray icon context menu -->
            <ContextMenu x:Key="TrayIconContextMenu" Placement="MousePoint">
                <MenuItem x:Name="TrayIconContextMenuAppName" Header="{DynamicResource Language_Show_Dopamine}" FontWeight="Bold" Click="TrayIconContextMenuAppName_Click"/>
                <Separator/>
                <MenuItem x:Name="TrayIconContextMenuExit" Header="{DynamicResource Language_Exit}" Click="TrayIconContextMenuExit_Click"/>
            </ContextMenu>
        </ResourceDictionary>
    </controls:DopamineWindow.Resources>

    <controls:DopamineWindow.WindowCommands>
        <StackPanel Orientation="Horizontal">
            <!-- Log file -->
            <Button 
                x:Name="PART_LogfileButton" 
                Style="{StaticResource WindowButton}" 
                Width="{x:Static base:Constants.DefaultWindowButtonWidth}" 
                Height="{x:Static base:Constants.DefaultWindowButtonHeight}" 
                BorderBrush="{x:Null}" 
                BorderThickness="0" 
                Background="{x:Null}" 
                ToolTip="{DynamicResource Language_Log_File}" 
                Command="{Binding ShowLogfileCommand}"
                Visibility="{Binding IsPreview,Converter={StaticResource BooleanToCollapsedConverter}}">
                <Button.Content>
                    <TextBlock 
                        Style="{StaticResource FontAwesome}" 
                        Text="&#xf188;" 
                        FontSize="16" 
                        HorizontalAlignment="center" 
                        VerticalAlignment="Center"/>
                </Button.Content>
            </Button>
            <!-- Mini Player switch button -->
            <Button 
                x:Name="PART_MiniPlayerButton" 
                Style="{StaticResource WindowButton}" 
                Width="{x:Static base:Constants.DefaultWindowButtonWidth}" 
                Height="{x:Static base:Constants.DefaultWindowButtonHeight}" 
                BorderBrush="{x:Null}" 
                BorderThickness="0" 
                Background="{x:Null}" 
                ToolTip="{DynamicResource Language_Mini_Player}" 
                Command="{x:Static commonprism:ApplicationCommands.TogglePlayerCommand}">
                <Path x:Name="Icon" Data="{StaticResource MiniPlayer}"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" 
                                HorizontalAlignment="center" 
                                VerticalAlignment="Center"
                                UseLayoutRounding="False" 
                                SnapsToDevicePixels="True"/>
            </Button>
        </StackPanel>
    </controls:DopamineWindow.WindowCommands>

    <!--  TaskbarItemInfo -->
    <controls:DopamineWindow.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="TaskBarItemInfo" 
                         ThumbnailClipMargin="0 0 0 0" 
                         Description="{Binding TaskbarService.Description}" 
                         ProgressValue="{Binding TaskbarService.ProgressValue}" 
                         ProgressState="{Binding TaskbarService.ProgressState}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo
                   x:Name="ThumbButtonInfoPrevious"
                   Command="{Binding PreviousCommand}"
                   Description="{DynamicResource Language_Previous}"
                   ImageSource="/Icons/TaskbarItemInfo_Previous.ico" />
                    <ThumbButtonInfo
                   x:Name="ThumbButtonInfoPlayPause"
                   Command="{x:Static commonprism:ApplicationCommands.TaskbarItemInfoPlayCommand}"
                   Description="{Binding PlayPauseText}"
                   ImageSource="{Binding PlayPauseIcon}"/>
                    <ThumbButtonInfo
                   x:Name="ThumbButtonInfoNext"
                   Command="{Binding NextCommand}"
                   Description="{DynamicResource Language_Next}"
                   ImageSource="/Icons/TaskbarItemInfo_Next.ico"/>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </controls:DopamineWindow.TaskbarItemInfo>

    <Grid>
        <Border x:Name="ClosingBorder" Panel.ZIndex="1" Visibility="Collapsed" Opacity="0" Background="{DynamicResource RG_WindowBackgroundBrush}">
            <Border.Resources>
                <Storyboard x:Key="ClosingAnimation">
                    <DoubleAnimation Storyboard.TargetName="ClosingBorder" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" BeginTime="0:0:0.5" Duration="0:0:0.3" />
                </Storyboard>
            </Border.Resources>
            <TextBlock 
                x:Name="ClosingText"
                Text="{DynamicResource Language_See_You_Later}" 
                Foreground="{DynamicResource RG_ForegroundBrush}" 
                FontWeight="Light"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                TextWrapping="Wrap"/>
        </Border>
        <Border x:Name="WindowBorder" Panel.ZIndex="0">
            <Border.Background>
                <SolidColorBrush x:Name="WindowBorderBackground" Color="{DynamicResource RG_WindowBackgroundColor}"/>
            </Border.Background>
            <Border.Resources>
                <Storyboard x:Key="BackgroundAnimation">
                    <ColorAnimation Storyboard.TargetName="WindowBorderBackground" Storyboard.TargetProperty="Color" To="{DynamicResource RG_WindowBackgroundColor}" Duration="0:0:0.2" />
                </Storyboard>
            </Border.Resources>
            <controls:TransitioningContentControl Grid.Row="0" Grid.Column="0" FadeIn="True" FadeInTimeout="0.5" Name="PlayerTypeRegion" prism:RegionManager.RegionName="{x:Static commonprism:RegionNames.PlayerTypeRegion}"/>
        </Border>
    </Grid>
    </controls:DopamineWindow>

