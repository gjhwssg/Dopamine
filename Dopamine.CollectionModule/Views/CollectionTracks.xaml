<commonviews:CommonTracksView x:Class="Dopamine.CollectionModule.Views.CollectionTracks"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Dopamine.CollectionModule.Views"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:prismMvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
             xmlns:commonprism="clr-namespace:Dopamine.Common.Prism;assembly=Dopamine.Common"
             xmlns:dc="clr-namespace:Digimezzo.WPFControls;assembly=Digimezzo.WPFControls"
             xmlns:controls="clr-namespace:Dopamine.Common.Controls;assembly=Dopamine.Common"
             xmlns:commonviews="clr-namespace:Dopamine.Common.Presentation.Views;assembly=Dopamine.Common"
             xmlns:corebase="clr-namespace:Dopamine.Common.Base;assembly=Dopamine.Common"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:presentationutils="clr-namespace:Dopamine.Common.Presentation.Utils;assembly=Dopamine.Common"
             prismMvvm:ViewModelLocator.AutoWireViewModel="True">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <controls:TotalsInformation
                                DockPanel.Dock="Bottom"
                                Margin="15,15,15,0" 
                                Foreground="{DynamicResource RG_InactiveForegroundBrush}" 
                                FontSize="13"
                                TotalDurationInformation="{Binding TotalDurationInformation}"
                                TotalSizeInformation="{Binding TotalSizeInformation}"/>
        <controls:DataGridEx 
                        x:Name="DataGridTracks" 
                        PreviewKeyDown="DataGridTracks_PreviewKeyDown"
                        KeyUp="DataGridTracks_KeyUp"
                        VirtualizingStackPanel.IsVirtualizing="True" 
                        VirtualizingStackPanel.VirtualizationMode="Recycling" 
                        ItemsSource="{Binding TracksCvs.View,IsAsync=True}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedTracksCommand}" CommandParameter="{Binding Path=SelectedItems,ElementName=DataGridTracks}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <controls:DataGridEx.Resources>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}">
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick" />
                </Style>
            </controls:DataGridEx.Resources>
            <controls:DataGridEx.Columns>
                <DataGridTextColumn x:Name="SongsColumn" Width="3*" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding TrackTitle}" Visibility="Visible">
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="ShuffleAllButton" Margin="0,5,10,0" FontSize="{x:Static corebase:Constants.GlobalFontSize}" Style="{StaticResource TransparentButton}" VerticalContentAlignment="Center" ToolTip="{DynamicResource Language_Shuffle_All}" Command="{Binding DataContext.ShuffleAllCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                <TextBlock Text="&#xE8B1;" Style="{StaticResource SegoeAssets}" Foreground="{DynamicResource RG_ForegroundBrush}" FontSize="16"/>
                            </Button>
                            <dc:LabelToLower Padding="0" Content="{DynamicResource Language_Song}"/>
                            <Label Content="{Binding DataContext.TracksCount,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Style="{StaticResource CountLabel}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTemplateColumn Width="40" IsReadOnly="True" Visibility="Visible">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Style="{StaticResource SpectrumAnimation}"
                                   Visibility="{Binding IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   IsHitTestVisible="{Binding IsPaused, Converter={StaticResource InvertingBooleanConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" 
                                   Margin="0,2,0,0" 
                                   VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Rating" MinWidth="70" IsReadOnly="True" Visibility="{Binding (FrameworkElement.DataContext).RatingVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTemplateColumn.Header>
                        <dc:LabelToLower Padding="0" Margin="10,0,0,0" Content="{DynamicResource Language_Rating}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:RatingButton 
                                            VerticalAlignment="Center" 
                                            Rating="{Binding Rating, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Love" MinWidth="50" IsReadOnly="True" Visibility="{Binding (FrameworkElement.DataContext).LoveVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTemplateColumn.Header>
                        <dc:LabelToLower Padding="0" Margin="5,0,0,0" Content="{DynamicResource Language_Love}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:LoveButton 
                                            VerticalAlignment="Center" 
                                            Love="{Binding Love, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="HasLyrics" MinWidth="30" IsReadOnly="True" Visibility="{Binding (FrameworkElement.DataContext).LyricsVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Margin="0,6,0,0" Text="&#xE720;" Style="{StaticResource SegoeAssets}" FontSize="15" Foreground="{DynamicResource RG_ForegroundBrush}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Margin="0,3,0,0" Text="&#xE73E;" Style="{StaticResource SegoeAssets}" FontSize="15" Visibility="{Binding HasLyrics, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="2*" SortMemberPath="SortArtistName" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding ArtistName}" Visibility="{Binding (FrameworkElement.DataContext).ArtistVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <dc:LabelToLower Padding="0" Content="{DynamicResource Language_Artist}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- SortAlbumTitle is used to sort by Album, but preserving track nubmer order inside the album -->
                <DataGridTextColumn Width="2*" SortMemberPath="SortAlbumTitle" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding AlbumTitle}" Visibility="{Binding (FrameworkElement.DataContext).AlbumVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <dc:LabelToLower Padding="0" Content="{DynamicResource Language_Album}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width="2*" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding Genre}" Visibility="{Binding (FrameworkElement.DataContext).GenreVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <dc:LabelToLower Padding="0" Content="{DynamicResource Language_Genre}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- SortDuration is used to correctly sort by Length, otherwise sorting goes like this: 1:00, 10:00, 2:00, 20:00-->
                <DataGridTextColumn Width="*" SortMemberPath="SortDuration" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding Duration}" Visibility="{Binding (FrameworkElement.DataContext).LengthVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="&#xE121;" Margin="0,5,0,0" Style="{StaticResource SegoeAssets}" Foreground="{DynamicResource RG_ForegroundBrush}" FontSize="16"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width="2*" SortMemberPath="SortAlbumArtist" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding AlbumArtist}" Visibility="{Binding (FrameworkElement.DataContext).AlbumArtistVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <dc:LabelToLower Padding="0" Content="{DynamicResource Language_Album_Artist}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*" SortMemberPath="FormattedTrackNumber" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding TrackNumber}" Visibility="{Binding (FrameworkElement.DataContext).TrackNumberVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <dc:LabelToLower Padding="0" Content="{DynamicResource Language_Track_Number_Short}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width="1.5*" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding Year}" Visibility="{Binding (FrameworkElement.DataContext).YearVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <dc:LabelToLower Padding="0" Content="{DynamicResource Language_Year}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- SortBitrate is used to sort by Bitrate number, not by the string with "kbps" -->
                <DataGridTextColumn Width="1.5*" SortMemberPath="SortBitrate" CellStyle="{StaticResource DataGridCellWithEllipsis}" IsReadOnly="True" Binding="{Binding Bitrate}" Visibility="{Binding (FrameworkElement.DataContext).BitrateVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <dc:LabelToLower Padding="0" Content="{DynamicResource Language_Bitrate}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </controls:DataGridEx.Columns>
        </controls:DataGridEx>
    </DockPanel>
</commonviews:CommonTracksView>
